<?xml version="1.0"?>
<robot name="Helmoro" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:include filename="$(find helmoro_description)/urdf/helmoro_parameters.urdf" />
  <xacro:include filename="$(find helmoro_description)/urdf/helmoro_segments.urdf" />
  <!--<xacro:include filename="$(find helmoro_sim_control)/urdf/helmoro_control.urdf" />-->

  <!-- Sensor Plugins-->
  <gazebo>
    <plugin filename="libignition-gazebo-imu-system.so" name="ignition::gazebo::systems::Imu">
    </plugin>
    <plugin
        filename="libignition-gazebo-sensors-system.so"
        name="ignition::gazebo::systems::Sensors">
        <render_engine>ogre2</render_engine>
    </plugin>
  </gazebo>

  <!-- Control Plugin-->
  <ros2_control name="IgnitionSystem" type="system">
    <hardware>
      <plugin>ign_ros2_control/IgnitionSystem</plugin>
    </hardware>
    <joint name="base_link_to_LEFT_FRONT_WHEEL">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="base_link_to_LEFT_BACK_WHEEL">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="base_link_to_RIGHT_FRONT_WHEEL">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="base_link_to_RIGHT_BACK_WHEEL">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
  </ros2_control>

  <gazebo>
    <!-- Joint state publisher -->
    <plugin filename="ign_ros2_control-system" name="ign_ros2_control::IgnitionROS2ControlPlugin">
      <parameters>$(find helmoro_sim_control)/config/helmoro_controller.yaml</parameters>
      <ros>
        <remapping>/helmoro_controller/cmd_vel_unstamped:=/cmd_vel</remapping>
      </ros>
    </plugin>
  </gazebo>

  <!--Camera-->
  <gazebo reference="camera_rgb_frame">
    <sensor name="camera" type="depth_camera">
      <always_on>0</always_on>
      <update_rate>30</update_rate>
      <topic>depth_camera</topic>
      <ignition_frame_id>camera_rgb_frame</ignition_frame_id>
      <camera>
          <horizontal_fov>${PI/3}</horizontal_fov> <!-- PI/3 -->
          <image>
              <width>640</width>
              <height>480</height>
              <format>R8G8B8</format>
          </image>
          <clip>
              <near>0.45</near>
              <far>8.0</far>
          </clip>
      </camera>
    </sensor>
  </gazebo>

  <!--LiDar-->
  <gazebo reference="${link_7_name}">
    <sensor type="gpu_lidar" name="rplidar">
      <pose relative_to='${link_7_name}'>0 0 0 0 0 0</pose>
      <topic>scan</topic>
      <update_rate>60</update_rate>
      <visualize>false</visualize>
      <ignition_frame_id>${link_7_name}</ignition_frame_id>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>0</min_angle> <!--0 degrees-->
            <max_angle>${2*PI}</max_angle> <!--360 degrees-->
          </horizontal>
        </scan>
        <range>
          <min>0.15</min> <!--should be 0.15-->
          <max>12.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
    </sensor>
  </gazebo>

  <gazebo reference="${link_8_name}">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <ignition_frame_id>${link_8_name}</ignition_frame_id>
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>imu</topic>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

  <xacro:link_1 />
  <xacro:link_2 />
  <xacro:link_3 />
  <xacro:link_4 />
  <xacro:link_5 />
  <xacro:link_6 />
  <xacro:link_7 />
  <xacro:link_8 />
  <xacro:link_9 />

  <gazebo reference="RIGHT_FRONT_WHEEL">
    <collision>
      <surface>
        <friction>
          <ode>
            <mu>5</mu>
            <mu2>5</mu2>
          </ode>
        </friction>
        <contact>
          <ode>
            <kp>1000000</kp> <!-- kp and kd for rubber -->
            <kd>100</kd>
          </ode>
        </contact>
      </surface>
    </collision>
  </gazebo>

  <gazebo reference="LEFT_FRONT_WHEEL">
    <collision>
      <surface>
        <friction>
          <ode>
            <mu>5</mu>
            <mu2>5</mu2>
          </ode>
        </friction>
        <contact>
          <ode>
            <kp>1000000</kp> <!-- kp and kd for rubber -->
            <kd>100</kd>
          </ode>
        </contact>
      </surface>
    </collision>
  </gazebo>

  <gazebo reference="RIGHT_BACK_WHEEL">
    <collision>
      <surface>
        <friction>
          <ode>
            <mu>5</mu>
            <mu2>5</mu2>
          </ode>
        </friction>
        <contact>
          <ode>
            <kp>1000000</kp> <!-- kp and kd for rubber -->
            <kd>100</kd>
          </ode>
        </contact>
      </surface>
    </collision>
  </gazebo>

  <gazebo reference="LEFT_BACK_WHEEL">
    <collision>
      <surface>
        <friction>
          <ode>
            <mu>5</mu>
            <mu2>5</mu2>
          </ode>
        </friction>
        <contact>
          <ode>
            <kp>1000000</kp> <!-- kp and kd for rubber -->
            <kd>100</kd>
          </ode>
        </contact>
      </surface>
    </collision>
  </gazebo>

</robot>
