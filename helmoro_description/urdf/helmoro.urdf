<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/xacro" name="Helmoro">

  <xacro:include filename="$(find helmoro_description)/urdf/helmoro_parameters.urdf" />
  <xacro:include filename="$(find helmoro_description)/urdf/helmoro_segments.urdf" />

  <!-- <gazebo>
    <plugin name="helmoro_gazebo_plugin" filename="libhelmoro_gazebo_plugin.so"></plugin>
  </gazebo> -->

  <gazebo reference="camera_rgb_frame">
    <sensor type="depth" name="camera">
      <always_on>0</always_on>
      <update_rate>1</update_rate>
      <camera name="camera_name">
        <distortion>
          <k1>0.1</k1>
          <k2>0.2</k2>
          <k3>0.3</k3>
          <p1>0.4</p1>
          <p2>0.5</p2>
          <center>0.5 0.5</center>
        </distortion>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <ros>
          <namespace>custom_ns</namespace>
          <remapping>custom_camera/image_raw:=custom_camera/custom_image</remapping>
          <remapping>custom_camera/image_depth:=custom_camera/custom_image_depth</remapping>
          <remapping>custom_camera/camera_info:=custom_camera/custom_info_raw</remapping>
          <remapping>custom_camera/camera_info_depth:=custom_camera/custom_info_depth</remapping>
          <remapping>custom_camera/points:=custom_camera/custom_points</remapping>
        </ros>
        <camera_name>custom_camera</camera_name>
        <frame_name>camera_rgb_optical_frame</frame_name>
        <hack_baseline>0.07</hack_baseline>
        <min_depth>0.45</min_depth>
        <max_depth>8</max_depth>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="${link_7_name}">
    <sensor type="ray" name="rplidar">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>0</min_angle> <!--0 degrees-->
            <max_angle>${2*PI}</max_angle> <!--360 degrees-->
          </horizontal>
        </scan>
        <range>
          <min>0.15</min> <!--should be 0.15-->
          <max>12.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="lidar_controller" filename="libgazebo_ros_ray_sensor.so">
        <ros>
        <namespace></namespace>
        <remapping>~/out:=scan</remapping>
      </ros>
      <!-- Set output to sensor_msgs/LaserScan to get same output type as gazebo_ros_laser -->
      <output_type>sensor_msgs/LaserScan</output_type>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="${link_8_name}">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>10</update_rate>
      <!-- <visualize>true</visualize> -->
      <plugin name="imu_plugin" filename="libgazebo_ros_imu_sensor.so">
        <ros>
          <!-- Will publish to /imu/data -->
          <namespace>/imu</namespace>
          <remapping>~/out:=data</remapping>
        </ros>
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

  <xacro:link_1 />
  <xacro:link_2 />
  <xacro:link_3 />
  <xacro:link_4 />
  <xacro:link_5 />
  <xacro:link_6 />
  <xacro:link_7 />
  <xacro:link_8 />

  <gazebo reference="RIGHT_FRONT_WHEEL">
    <collision>
      <surface>
        <friction>
          <ode>
            <mu>5</mu>
            <mu2>5</mu2>
          </ode>
        </friction>
        <contact>
          <ode>
            <kp>1000000</kp> <!-- kp and kd for rubber -->
            <kd>100</kd>
          </ode>
        </contact>
      </surface>
    </collision>
  </gazebo>

  <gazebo reference="LEFT_FRONT_WHEEL">
    <collision>
      <surface>
        <friction>
          <ode>
            <mu>5</mu>
            <mu2>5</mu2>
          </ode>
        </friction>
        <contact>
          <ode>
            <kp>1000000</kp> <!-- kp and kd for rubber -->
            <kd>100</kd>
          </ode>
        </contact>
      </surface>
    </collision>
  </gazebo>

  <gazebo reference="RIGHT_BACK_WHEEL">
    <collision>
      <surface>
        <friction>
          <ode>
            <mu>5</mu>
            <mu2>5</mu2>
          </ode>
        </friction>
        <contact>
          <ode>
            <kp>1000000</kp> <!-- kp and kd for rubber -->
            <kd>100</kd>
          </ode>
        </contact>
      </surface>
    </collision>
  </gazebo>

  <gazebo reference="LEFT_BACK_WHEEL">
    <collision>
      <surface>
        <friction>
          <ode>
            <mu>5</mu>
            <mu2>5</mu2>
          </ode>
        </friction>
        <contact>
          <ode>
            <kp>1000000</kp> <!-- kp and kd for rubber -->
            <kd>100</kd>
          </ode>
        </contact>
      </surface>
    </collision>
  </gazebo>

</robot>
